import streamlit as st
import seaborn as sns
import matplotlib.pyplot as plt    
from streamlit_option_menu import option_menu

def page_data(df):
    st.header("Блок 1: Описательная статистика данных")
    st.write("""В мире данных, где информация может быть ошеломляющей в своей многообразности, описательная статистика выступает важным инструментом для обобщения, упорядочивания и представления существенных характеристик набора данных. Она не только облегчает восприятие информации, но и является ключом к глубокому пониманию структуры и особенностей данных.

Ключевые параметры описательной статистики, такие как среднее значение, медиана, мода, дисперсия и стандартное отклонение, становятся опорой в процессе анализа данных. С помощью этих метрик мы можем выявить центральные тенденции, оценить степень изменчивости и выделить наиболее часто встречающиеся значения.

Описательная статистика не только служит средством конденсации информации, но и создает базу для сравнения различных наборов данных, выявления выбросов и выделения особенностей распределения. Эта методология позволяет исследователям, аналитикам и принимающим решениям сфокусироваться на ключевых аспектах данных, сэкономив время и ресурсы.

Таким образом, важность описательной статистики и ключевых параметров в анализе данных заключается не только в их способности предоставлять краткую характеристику, но и в том, что они служат основой для дальнейшего исследования и принятия обоснованных решений на основе числовых фактов.""")




    st.write("В данной части нашего курса мы будем работать с данными, которые содержат информацию о более чем 135.000 вакансий, и были получены с помощью парсинга с сайта HH.ru.")
    st.write("В них есть данные о вакансиях практически со всех сфер трудового рынка, а так же есть дополнительная информации о самой вакансии, как например, необходимый трудовой стаж, а так же ключевые навыки, которые нужны для выполнения рабочих задач.")
    st.write("Эти данные будут очень полезны нам для получения реальной статистики о трудовом рынке за 2022-2023 год.")


    is_button_clicked = False

    # Создание кнопки
    button_label = "Открыть теоретическую информацию" if not is_button_clicked else "Закрыть"
    if st.button(button_label):
        # Изменение состояния при клике
        is_button_clicked = not is_button_clicked

    # Дополнительные элементы, которые появляются при открытой кнопке
    if is_button_clicked:


        st.write("""#### Основное понятие теории вероятности - это **вероятность**. 
                \n **Вероятность** в статистике представляет собой отношение числа благоприятных случаев (т.е., событий, которые нас интересуют) к общему числу возможных случаев. Вероятность обычно выражается от 0 до 1, где 0 означает невозможность события, а 1 – его достоверность. 
                 Вероятность также может быть выражена в процентах, умножив значение на 100.""")

        st.write("""### Теоретическая информация о описательной статистике:

#### 1. **Средние показатели:**
   - *Среднее арифметическое:* Сумма всех значений, делённая на количество наблюдений.
   - *Медиана:* Значение, разделяющее упорядоченный набор данных на две равные половины.
   - *Мода:* Самое часто встречающееся значение в наборе данных.

#### 2. **Разброс данных:**
   - *Дисперсия:* Среднеквадратическое отклонение от среднего значения.
   - *Стандартное отклонение:* Квадратный корень из дисперсии; измеряет степень изменчивости данных.

#### 3. **Меры положения:**
   - *Квартили:* Значения, разделяющие упорядоченный ряд на четыре равные части.
   - *Децили и процентили:* Значения, разделяющие ряд на десяти и произвольные процентные части соответственно.

#### 4. **Визуализация данных:**
   - *Гистограммы:* Графическое представление распределения данных.
   - *Ящик с усами (box plot):* Иллюстрация основных статистических характеристик, таких как медиана и квартили.

#### 5. **Корреляция и регрессия:**
   - *Корреляция:* Измеряет степень взаимосвязи между двумя переменными.
   - *Регрессия:* Позволяет предсказывать значения одной переменной на основе значений другой.
 """)

    if is_button_clicked and st.button("Закрыть"):
        # Изменение состояния при клике на кнопку "Закрыть"
        is_button_clicked = not is_button_clicked

    st.write("#### Посмотрим на первые пять строк датасета.")
    if st.button("Посмотреть на содержание набора данных"):
        st.write(df.head())

    st.write("#### Теперь нужно понять, какие типы данных мы имеем в наших колонках")
    if st.button("Посмотреть на типы данных"):
        st.write(df.dtypes)

        st.write("В нашем датасете есть различные типы данных, как категориальные (название вакансии), так и численные (зарплата)")

    st.write("#### Узнав типы данных, мы можем смело выдвигать различные гипотезы для анализа данных, например, найти численные характеристики в колонке зарплаты")

    if st.button("Показать данные о зарплате"):

        st.write(f"Минимальная зарплата: {df['salary'].min():.2f} ₽")
                 
        st.write(f"Средняя зарплата: {df['salary'].mean():.2f} ₽")

        st.write(f"Максимальная зарплата: {df['salary'].max():.2f} ₽")

        mode_result = df['salary'].mode()
        st.write(f"Мода зарплаты: {', '.join(map(str, mode_result))} ₽")

        st.write(f"Медианная зарплата: {df['salary'].median():.2f} ₽")
        

    st.write("#### Теперь можно попробовать использовать инструмент для визуального анализа зарплаты")
    if st.button("Показать распределение зарплаты по всем вакансиям", type='primary'):
        # Ваш код для построения гистограммы
        fig, ax = plt.subplots()
        sns.histplot(df['salary'], kde=True, ax=ax)
        ax.set_title('Распределение зарплат')
        ax.set_xlabel('Зарплата')
        ax.set_ylabel('Частота')
        st.pyplot(fig)